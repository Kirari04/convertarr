package components

import (
	"encoder/t"
	"encoder/m"
	"github.com/dustin/go-humanize"
	"fmt"
	"time"
)

templ HistoryTable(Ctx t.TemplCtx, histories []m.History) {
	<table class="table is-fullwidth">
		<thead>
			<tr>
				<th>Created At</th>
				<th>Path</th>
				<th>OldSize</th>
				<th>NewSize</th>
				<th>ImageComparison</th>
				<th>TimeTaken</th>
				<th>Status</th>
			</tr>
		</thead>
		<tbody>
			for _, history := range histories {
				<tr>
					<td>
						{ history.CreatedAt.Format("2006-01-02 15:04:05") }
					</td>
					<td>
						{ history.OldPath }
					</td>
					<td>
						{ humanize.Bytes(history.OldSize) }
					</td>
					<td>
						{ humanize.Bytes(history.NewSize) }
					</td>
					<td>
						if history.ComparisonImg != "" {
							<a href={ templ.URL(string([]byte(history.ComparisonImg)[1:])) } target="_blank">
								Open
							</a>
						}
					</td>
					<td>
						if history.TimeTaken.Seconds() == 0 && history.Status == "encoding" {
							{ 
							fmt.Sprintf(
								"%s",
								time.Duration(
									time.Now().Unix() - history.CreatedAt.Unix(),
								) * time.Second,
							) } / { fmt.Sprintf("%s", history.PredictTimeTaken) }
						} else {
							{ fmt.Sprintf("%s", history.TimeTaken) }
						}
					</td>
					<td>
						switch history.Status {
							case "encoding":
								<span class="tag is-link">{ fmt.Sprintf("%.0f%%", history.Progress * 100) } { history.Status }</span>
							case "copy":
								<span class="tag is-link">{ history.Status }</span>
							case "failed":
								<span class="tag is-danger">{ history.Status }</span>
							case "finished":
								<span class="tag is-success">{ history.Status }</span>
							default:
								<span class="tag">{ history.Status }</span>
						}
					</td>
				</tr>
				if history.Status == "failed" {
					<tr>
						<td colspan="6">
							<article class="message is-dark is-small">
								<div class="message-body">
									<p>
										<strong>
											Error Message
										</strong>
									</p>
									{ templ.EscapeString(history.Error) }
								</div>
							</article>
						</td>
					</tr>
				}
			}
		</tbody>
	</table>
}
