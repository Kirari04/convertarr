package views

import (
	"encoder/layouts"
	"encoder/t"
	"encoder/helper"
	"fmt"
	"time"
	"runtime"
)

templ Setting(Ctx t.TemplCtx, Title string, v t.SettingValidator) {
	@layouts.Default(Ctx, Title) {
		<article class="message">
			<div class="message-header">
				<p>Setting</p>
			</div>
			<form method="POST" action="/setting" class="message-body">
				<h2 class="subtitle is-4">Security</h2>
				<div class="field">
					<label class="checkbox">
						<input
							type="checkbox"
							name="EnableAuthentication"
							checked?={ helper.PStrToStr(v.EnableAuthentication) == "checked" || helper.PStrToStr(v.EnableAuthentication) == "on" }
						/>
						Enable Authentication
					</label>
				</div>
				<div class="field">
					<div class="control">
						<label class="radio">
							<input
								type="radio"
								name="AuthenticationType"
								value="form"
								checked?={ helper.PStrToStr(v.AuthenticationType) == "form" }
							/>
							Form-Html
						</label>
						<label class="radio">
							<input
								type="radio"
								name="AuthenticationType"
								value="basic"
								checked?={ helper.PStrToStr(v.AuthenticationType) == "basic" }
							/>
							Basic-Auth
						</label>
					</div>
				</div>
				<div class="field">
					<a href="/setting/user" class="button is-info">
						User Settings
					</a>
				</div>
				<br/>
				<h2 class="subtitle is-4">Folder Scanning</h2>
				<div class="field">
					<label class="checkbox">
						<input
							type="checkbox"
							name="EnableAutomaticScanns"
							checked?={ helper.PStrToStr(v.EnableAutomaticScanns) == "checked" || helper.PStrToStr(v.EnableAutomaticScanns) == "on" }
						/>
						Enable Automatic Scanns
					</label>
				</div>
				<div class="field">
					<div class="control">
						<span class="select">
							<select name="AutomaticScannsInterval">
								for _, min := range []int{ 2, 5, 15, 30, 60, 120, 720, 1440 } {
									<option value={ templ.EscapeString(fmt.Sprint(min)) } selected?={ v.AutomaticScannsInterval == min }>
										{ templ.EscapeString(fmt.Sprintf("%s", time.Duration(min) * time.Minute )) }
									</option>
								}
							</select>
						</span>
						Automatic Scanns Interval
					</div>
				</div>
				<div class="field">
					<label class="checkbox">
						<input
							type="checkbox"
							name="AutomaticScannsAtStartup"
							checked?={ helper.PStrToStr(v.AutomaticScannsAtStartup) == "checked" || helper.PStrToStr(v.AutomaticScannsAtStartup) == "on" }
						/>
						Enable Automatic Scanns At Startup
					</label>
				</div>
				<div class="field">
					<a href="/setting/folder" class="button is-info">
						Folder Settings
					</a>
				</div>
				<h2 class="subtitle is-4">File Encoding</h2>
				<div class="field">
					<label class="checkbox">
						<input
							type="checkbox"
							name="EnableEncoding"
							checked?={ helper.PStrToStr(v.EnableEncoding) == "checked" || helper.PStrToStr(v.EnableEncoding) == "on" }
						/>
						Enable Automatic Scanns
					</label>
				</div>
				<div class="field">
					<div class="control">
						<input
							class="input"
							type="number"
							name="EncodingThreads"
							style="max-width: 400px;"
							value={ templ.EscapeString(fmt.Sprint(v.EncodingThreads)) }
							min="0"
							max={ fmt.Sprint(runtime.NumCPU()) }
						/>
						Encoding Threads (0 = use all, max = { fmt.Sprint(runtime.NumCPU()) })
					</div>
				</div>
				<div class="field">
					<div class="control">
						<input
							class="input"
							type="number"
							name="EncodingCrf"
							style="max-width: 400px;"
							value={ templ.EscapeString(fmt.Sprint(v.EncodingCrf)) }
							min="1"
							max="50"
						/>
						Encoding Crf (1-50)
					</div>
				</div>
				<div class="field">
					<div class="control">
						<button type="submit" class="button is-primary">Save</button>
					</div>
				</div>
			</form>
		</article>
	}
}
